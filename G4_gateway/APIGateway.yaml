openapi: 3.0.1
info:
  title: COSN API Gateway
  description: Mobility Monitoring and Simulation System
  version: 1.0.2
servers:
  - url: https://cosn-api-gateway.herokuapp.com
    description: Heroku server url
  - url: https://cosn-health-checking.herokuapp.com
    description: Health check server url
  - url: https://cosn-log-aggregation.herokuapp.com
    description: Log Aggregation Service for the COSN system
  - url: http://localhost:8080
    description: Localhost server url
paths:
  ################################
  #Authentication
  ################################
  /register:
    post:
      tags:
        - Authentication
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /login:
    post:
      tags:
        - Authentication
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getUserFromToken:
    post:
      tags:
        - Authentication
      operationId: getUserFromToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFromTokenRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  ################################
  #Roles
  ################################
  /changeUserRole:
    post:
      tags:
        - Roles Managment
      operationId: changeUserRole
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleChangeRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /roles:
    get:
      tags:
        - Roles Managment
      operationId: getAllRoles
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /role/{roleId}:
    get:
      tags:
        - Roles Managment
      operationId: getRoleById
      parameters:
        - name: roleId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  ################################
  #Visualization Service
  ################################
  /runVisualization:
    post:
      tags:
        - Visualization Service
      summary: Return all workflows from a user.
      operationId: runVisualization
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisualizationRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  ################################
  #MAS Service
  ################################
  /getMyWorkflows:
    get:
      tags:
        - MAS Service
      summary: Return all workflows from a user.
      operationId: getMyWorkflows
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MyWorkflowResponse'
  /runWorkflow:
    post:
      tags:
        - MAS Service
      summary: Execute a workflow.
      operationId: runWorkflow
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkflowRequest'
        required: true
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RunWorkflowResponse'
  /getWorkflowById:
    get:
      tags:
        - MAS Service
      summary: Return a workflow by ID.
      operationId: getAllWorkflows
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
        - name: Id
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RunWorkflowResponse'
  ################################
  #City service
  ################################
  /getAllCities:
    get:
      tags:
        - City and Domain Model Service
      summary: Return all cities.
      operationId: getAllCities
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getSensorByType/static:
    get:
      tags:
        - City and Domain Model Service
      summary: Return all static sensors by type and radius.
      operationId: getSensorByType
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
        - name: cityId
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
        - name: radius
          in: query
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getSensorValues/static:
    get:
      tags:
        - City and Domain Model Service
      summary: Return all static sensors by radius.
      operationId: getSensorValues
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
        - name: cityId
          in: query
          required: true
          schema:
            type: string
        - name: radius
          in: query
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getSensorType/mobile:
    get:
      tags:
        - City and Domain Model Service
      summary: Return mobile sensors of a city by type.
      operationId: getSensorTypeMobile
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
        - name: cityId
          in: query
          required: true
          schema:
            type: string
        - name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getSensorCity/mobile:
    get:
      tags:
        - City and Domain Model Service
      summary: Return mobile sensors of a city.
      operationId: getSensorCityMobile
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
        - name: cityId
          in: query
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  ################################
  #Domain Model service
  ################################
  /getAllDomainModels:
    get:
      tags:
        - City and Domain Model Service
      summary: Return all available domain models.
      operationId: getAllDomainModels
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  ################################
  #Real System service
  ################################
  /getSensorsValues:
    get:
      tags:
        - Real System Service
      summary: Return all sensor values by time interval.
      operationId: getAllValues
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
        - name: sensorsIds
          in: query
          required: true
          schema:
            type: string
        - name: startTime
          in: query
          required: true
          schema:
            type: string
        - name: endTime
          in: query
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  ################################
  #Monitoring
  ################################
  /getSystemHealth:
    get:
      tags:
        - Monitoring System
      summary: Return health system information.
      operationId: getSystemHealth
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  ################################
  #Algorithms service
  ################################
  /getAlgorithms:
    get:
      summary: Return all available algorithms.
      description: Return all algorithms from the Algorithms Service
      tags:
        - Algorithms Service
      operationId: getAlgorithms
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getAlgorithmsName:
    get:
      summary: Return all available algorithms name.
      description: Return all algorithms name from the Algorithms Service
      tags:
        - Algorithms Service
      operationId: getAlgorithmsNames
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /getAlgorithmById:
    get:
      summary: Return an algorithm by ID.
      description: Return an algorithm by ID from the Algorithms Service
      tags:
        - Algorithms Service
      operationId: getAlgorithmById
      parameters:
        - name: AuthToken
          in: header
          required: true
          schema:
            type: string
        - name: Id
          in: header
          required: true
          schema:
            type: string
      responses:
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "226":
          description: IM Used
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleResponse'
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  ################################
  #Monitoring and Logging
  ################################
  /health:
    get:
      summary: Returns the status of the service
      description: This endpoint returns status 200 to notify the Health Checking Service that its working as intended.
      responses:
        "200":
          description: The response if the service is working as intended.
  /services:
    get:
      tags:
        - service-controller
      operationId: getService
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SimpleResponse"
    put:
      tags:
        - service-controller
      operationId: updateService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SimpleResponse"
    delete:
      tags:
        - service-controller
      operationId: deleteService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SimpleResponse"
  /registerService:
    post:
      tags:
        - service-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service"
        required: true
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/SimpleResponse"
  /logs:
    get:
      summary: Returns a list of logs.
      description: Returns the logs from the Log Aggregation Service
      parameters:
        - name: startTime
          in: query
          required: false
          description: The start timestamp of the filtering
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: endTime
          in: query
          required: false
          description: The ending timestamp of the filtering
          schema:
            type: integer
            format: int64
            minimum: 0
        - name: serviceName
          in: query
          required: false
          description: The service name
          schema:
            type: string
            format: utf8
            minimum: 0
      responses:
        "200":
          description: A JSON array of logs
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Log"
        "500":
          description: An error occurred while retreiving the logs
  /logsByService:
    get:
      tags:
        - service-log-controller
      operationId: getLogsByServiceID
      parameters:
        - name: simpleWrapper
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/SimpleWrapper"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SimpleResponse"
  /logsByServiceTimestamp:
    get:
      tags:
        - service-log-controller
      operationId: getLogsByServiceTimestamp
      parameters:
        - name: simpleWrapper
          in: query
          required: true
          schema:
            "$ref": "#/components/schemas/SimpleWrapper"
      responses:
        "200":
          description: OK
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/SimpleResponse"
components:
  schemas:
    LogType:
      type: string
      enum:
        - INFORMATION
        - WARNING
        - FATAL
        - DEBUG
        - OTHER
    OperationType:
      type: string
      enum:
        - CREATE
        - UPDATE
        - DELETE
        - READ
        - OTHER
    Log:
      type: object
      required:
        - messageType
        - operationType
        - serviceName
      properties:
        messageType:
          "$ref": "#/components/schemas/LogType"
        operationType:
          "$ref": "#/components/schemas/OperationType"
        message:
          type: string
        serviceName:
          type: string
    SimpleResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
    VisualizationRequest:
      type: object
      properties:
        id:
          type: number
    RunWorkflowResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        workflowExecution:
          $ref: '#/components/schemas/WorkflowRequest'
        logs:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRequest'
    MyWorkflowResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        workflowExecution:
          type: array
          items:
            $ref: '#/components/schemas/WorkflowRequest'
        logs:
          type: array
          items:
            type: object
            properties:
              action:
                type: string
              message:
                type: string
    WorkflowRequest:
      type: object
      properties:
        workflowId:
          type: string
        domainModelId:
          type: string
        description:
          type: string
    UserRegisterRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        roleId:
          type: integer
          format: int64
    UserLoginRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    UserFromTokenRequest:
      type: object
      properties:
        token:
          type: string
    OrderRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    UserRoleChangeRequest:
      type: object
      properties:
        email:
          type: string
        roleId:
          type: integer
          format: int64
    service:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        ip:
          type: string
        port:
          type: string
        logs:
          type: array
          items:
            "$ref": "#/components/schemas/serviceLog"
    serviceLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
    SimpleWrapper:
      type: object
      properties:
        initialTimestamp:
          type: string
          format: date-time
        endTimestamp:
          type: string
          format: date-time
        ser:
          "$ref": "#/components/schemas/service"
        serLog:
          "$ref": "#/components/schemas/serviceLog"
